<%# 遅延読み込みのためのスクリプト %>
<%= javascript_include_tag 'https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.1.2/lazysizes.min.js' %>
<div id="search_book_button" class="search_book_button">
    <a href="<%= books_show_form_path %>" data-remote="true">
        <button class="search_book_button submit_btn_small">本を探す</button>
    </a>
</div>
<div id="search_book_form"></div>
<%= form_with(model: @book, url: book_path(@books.ids)) do |form| %>
    <input type="hidden" id="authenticity_token_destroy" name="authenticity_token" value="<%= form_authenticity_token %>" >
<div class="page_wrapper">
    <%= @err %>
    <% if @books.present? %>
        <div id="books_in_shelf">
            <% @books.each do |book| %>
                <div class="book_img_box" id="<%= book.id %>" >
                    <a href="/books/info/<%= book.api_id %>" data-turbolinks="false">
                        <p class="thumbnail_top">
                            <% if book.users_thumbnail.present? %>
                            <%= lazysizes_image_tag book.users_thumbnail_url ,class: "book_img shelf_book", alt:'本の画像' %>
                            <% else %>
                            <%= lazysizes_image_tag book.thumbnail ,class: "book_img shelf_book", alt:'本の画像' %>
                            <% end %>
                        </p>
                    </a>
                    <a href="/impressions/<%= book.impression_link %>" class="shelf_link" data-turbolinks="false">
                        <div class="book_title" id="title_<%= book.id %>">
                            <%= book.title %>
                            <div class="book_count_info">
                                <% if book %>
                                <% end %>
                                <p class="book_count">
                                    <%= lazysizes_image_tag "star-on.png" %>
                                    <% if book.evaluation %>
                                        <%= book.evaluation %>
                                    <% else %>
                                    -
                                    <% end %>
                                </p>
                                <% if book %>
                                <p class="book_count">
                                    <%#= lazysizes_image_tag "impression.svg", class: "book_counter_icon" %>
                                    
                                </p>
                                <p class="book_count">
                                    <%#= lazysizes_image_tag "Twitter_icon_circle.svg", class: "book_counter_icon" %>
                                    
                                </p>
                                <% end %>
                            </div>
                        </div>
                    </a>
                    <input id="api_path_<%= book.id %>" type="hidden" name="api_path" value="<%= book.api_path %>" />
                    <div class="shelf_side_ico">
                        <%= lazysizes_image_tag "fire_work.svg", class: "fire_work", id: "destroy_book_#{book.id}" %>
                        <p class="handle"><%= lazysizes_image_tag 'dot_for_handle.svg' %></p>

                    </div>
                </div>
            <% end %>
        </div>
    <% else %>
    <p>本が登録されていません。</p>
    <% end %>
</div>
<% end %>
<p id="log"></p>
<%# 本当はgemで読み込みたかったが以下のコードを消すと動かなくなるので、読み込めてないかもしれない。 %>
<script type="text/javascript" src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
<%# スマホなどタッチアクションで動作するようにするscript %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script>
  <script src="http://code.jquery.com/ui/1.10.0/jquery-ui.js"></script>

<script>
$(document).on('turbolinks:load', function() {
// 本を並べ替える。
$('#books_in_shelf').sortable({
    scrollSpeed: 10,
    revert: 200,
    animation: 100,
    opacity: 0.8,
    handle: "p.handle",
    update: function(event, ui){
        var item = ui.item;
        var book_id = item.attr("id");
        var sort_url = "/books/"+ book_id +"/sort";
        var item_data = item.data();
        var params = { _mesthod: 'put' }
        params = {
          row_order_position: item.index()
        };
        $.ajax({
            url:      sort_url,
            type:     'put',
            dataType: 'json',
            data:     params
        });
    }
});

    // 本を削除するボタン
<% @books.each do |book| %>
    $('#destroy_book_<%= book.id %>').click(function() {
        Swal.fire({
          title: '',
          text: "本を削除すると感想も削除されるよ。",
          type: 'question',
          showCancelButton: true,
          confirmButtonText: 'おっけー',
          cancelButtonText: 'やめる'
        }).then((result) => {
          if (result.value) {
            $.ajax({
                url:  "<%= book_path(book.id) %>",
                type: 'delete',
                data: { authenticity_token: $("#authenticity_token_destroy").val()
                    }
                });
          }
        });
    });
<% end %>
});
</script>

    <div id="container">
      <!-- <canvas width="320" height="240" id="picture"></canvas> -->
      <input id="Take-Picture" type="file" accept="image/*;capture=camera" />
      <p id="textbit"></p>
      <input type="hidden" id="barcode" value="">
    </div>
    <script type="text/javascript" src="/JOB.js"></script>
    <script type="text/javascript">
      var takePicture = document.querySelector("#Take-Picture"),
      showPicture = document.createElement("img");
      Result = document.querySelector("#textbit");
      sendBarcode = document.querySelector("#barcode");
      // sendBarcode.value = 'aaaaaaa'; // 表示確認
      var canvas =document.getElementById("picture");
      var ctx = canvas.getContext("2d");
      JOB.Init();
      JOB.SetImageCallback(function(result) {
        if(result.length > 0){
          var tempArray = [];
          for(var i = 0; i < result.length; i++) {
            tempArray.push(result[i].Format+" : "+result[i].Value);
          }
          Result.innerHTML=tempArray.join("<br />");
          sendBarcode.value = tempArray; // 
          // ajaxを記述
            $.ajax({
                url:  "user_path",
                type: 'get',
                data: { barcode: tempArray
                    }
                });





        }else{
          if(result.length === 0) {
            Result.innerHTML="Decoding failed.";
          }
        }
      });
      JOB.PostOrientation = true;
      JOB.OrientationCallback = function(result) {
        canvas.width = result.width;
        canvas.height = result.height;
        var data = ctx.getImageData(0,0,canvas.width,canvas.height);
        for(var i = 0; i < data.data.length; i++) {
          data.data[i] = result.data[i];
        }
        ctx.putImageData(data,0,0);
      };
      JOB.SwitchLocalizationFeedback(true);
      JOB.SetLocalizationCallback(function(result) {
        ctx.beginPath();
        ctx.lineWIdth = "2";
        ctx.strokeStyle="red";
        for(var i = 0; i < result.length; i++) {
          ctx.rect(result[i].x,result[i].y,result[i].width,result[i].height); 
        }
        ctx.stroke();
      });
      if(takePicture && showPicture) {
        takePicture.onchange = function (event) {
          var files = event.target.files;
          if (files && files.length > 0) {
            file = files[0];
            try {
              var URL = window.URL || window.webkitURL;
              showPicture.onload = function(event) {
                Result.innerHTML="";
                JOB.DecodeImage(showPicture);
                URL.revokeObjectURL(showPicture.src);
              };
              showPicture.src = URL.createObjectURL(file);
            }
            catch (e) {
              try {
                var fileReader = new FileReader();
                fileReader.onload = function (event) {
                  showPicture.onload = function(event) {
                    Result.innerHTML="";
                    JOB.DecodeImage(showPicture);
                  };
                  showPicture.src = event.target.result;
                };
                fileReader.readAsDataURL(file);
              }
              catch (e) {
                Result.innerHTML = "Neither createObjectURL or FileReader are supported";
              }
            }
          }
        };
      }
    </script>
